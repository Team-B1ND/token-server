name: CD

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set jdk 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set yml file 
      uses: microsoft/variable-substitution@v1
      with:
        files: src/main/resources/application.yml
      env:
        jwt.access-secret: ${{ secrets.JWT_ACCESS_KEY }}
        jwt.refresh-secret: ${{ secrets.JWT_REFRESH_KEY }}
        jwt.access-expiry-date: ${{ secrets.JWT_ACCESS_EXPIRY_DATE }}
        jwt.refresh-expiry-date: ${{ secrets.JWT_REFRESH_EXPIRY_DATE }}

    - name: Build with gradle
      run: ./gradlew build
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build docker image
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/token-server:latest --push .


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run docker image
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.LINUX_HOST }}
          username: ${{ secrets.LINUX_USERNAME }}
          password: ${{ secrets.LINUX_PASSWORD }}
          port: ${{ secrets.LINUX_SSH_PORT }}
          script: |
            cd docker
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker compose -f dodamdodam-docker-compose.yml stop token-server
            docker compose -f dodamdodam-docker-compose.yml rm -f token-server
            docker compose -f dodamdodam-docker-compose.yml up token-server --pull always -d